<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:shardingsphere="http://shardingsphere.apache.org/schema/shardingsphere/datasource"
       xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://shardingsphere.apache.org/schema/shardingsphere/datasource
     http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource.xsd
     http://shardingsphere.apache.org/schema/shardingsphere/sharding
     http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd
    ">

    <context:property-placeholder location="classpath:application.properties"/>

    <!--包扫描, 扫描com.cgy.sharding包下所有文件 注册beean 及启用 注解-->
    <context:component-scan base-package="com.cgy.sharding"/>

    <aop:aspectj-autoproxy/>
    <!--引入外部配置, 配置分离了-->

    <!-- 配置数据源 -->
    <bean id="ds_0" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url0}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="ds_1" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url1}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="ds_2" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url2}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--分库策略-->
    <sharding:standard-strategy id="databaseStrategy" sharding-column="ou_id" algorithm-ref="inlineStrategyShardingAlgorithm" />

    <!--分库算法-->
    <sharding:sharding-algorithm id="inlineStrategyShardingAlgorithm" type="INLINE">
        <props>
            <prop key="algorithm-expression">ds_$->{ou_id % 3}</prop>
        </props>
    </sharding:sharding-algorithm>

    <!--主键生成策略 雪花算法-->
    <sharding:key-generate-algorithm id="snowflakeAlgorithm" type="SNOWFLAKE">
        <props>
            <prop key="worker-id">123</prop>
        </props>
    </sharding:key-generate-algorithm>

    <sharding:key-generate-strategy id="orgUserKeyGenerator" column="ou_id" algorithm-ref="snowflakeAlgorithm" />

    <!--分片规则-->
    <sharding:rule id="shardingRule">
        <sharding:table-rules>
            <sharding:table-rule logic-table="org_user" database-strategy-ref="databaseStrategy" key-generate-strategy-ref="orgUserKeyGenerator" />
        </sharding:table-rules>
    </sharding:rule>

    <shardingsphere:data-source id="shardingDataSource" data-source-names="ds_0,ds_1,ds_2" rule-refs="shardingRule" >
        <props>
            <prop key="sql-show">false</prop>
        </props>
    </shardingsphere:data-source>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource" />
    </bean>

    <tx:annotation-driven />

    <bean id="mybatisPlusInterceptor" class="com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor">
        <property name="interceptors">
            <list>
                <ref bean="paginationInnerInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="paginationInnerInterceptor" class="com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor">
        <constructor-arg name="dbType" value="MYSQL"/>
    </bean>

    <!-- COUNT SQL 解析.可以没有 -->
    <bean id="countSqlParser" class="com.baomidou.mybatisplus.extension.plugins.pagination.optimize.JsqlParserCountOptimize">
        <property name="optimizeJoin" value="true"/>
    </bean>

    <!--集成 mybatisplus时，sqlSessionFactory 替换成 mybatisplus-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>-->
    <!--数据源 引用 分片数据源-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource" />
        <property name="typeAliasesPackage" value="com.cgy.sharding.entity" />
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>

        <property name="plugins">
            <array>
                <ref bean="mybatisPlusInterceptor"></ref>
                <!--<bean class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor">
                    <property name="sqlParser" ref="自定义解析类、可以没有"/>
                    <property name="dialectClazz" value="自定义方言类、可以没有"/>
                    &lt;!&ndash; COUNT SQL 解析.可以没有 &ndash;&gt;
                    <property name="countSqlParser" ref="countSqlParser"/>
                </bean>-->
            </array>
        </property>

    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cgy.sharding.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>